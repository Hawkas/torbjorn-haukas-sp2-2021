//* Fluid type mixin
//? Couldn't find source but I found it many months ago on some css-tricks post

@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
	@each $property in $properties {
		#{$property}: $min-value;
	}

	@media only screen and (min-width: $min-vw) {
		@each $property in $properties {
			#{$property}: calc(
				#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}
			);
		}
	}

	@media only screen and (min-width: $max-vw) {
		@each $property in $properties {
			#{$property}: $max-value;
		}
	}
}

@function strip-unit($number) {
	@if type-of($number) == "number" and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}

	@return $number;
}

//* button animation mixin https://codepen.io/anon/embed/qmerBv?height=500&theme-id=1&slug-hash=qmerBv&default-tab=result#css-box

//* Shitty mixins I made myself
@mixin primary-fonts($lineheight: 150%, $letterspacing: 0.006em, $fontsize: $bodytext, $fontweight: $regular) {
	font-family: $primary-font;
	line-height: $lineheight;
	letter-spacing: $letterspacing;
	font-size: $fontsize;
	font-weight: $fontweight;
}

@mixin display-fonts($lineheight: 100%, $fontsize: $sectiontitle, $letterspacing: 0.05em, $fontweight: $bold) {
	font-family: $display-font;
	line-height: $lineheight;
	letter-spacing: $letterspacing;
	font-weight: $fontweight;
	@include fluid-type(font-size, 320px, 768px, $fontsize * 0.75, $fontsize);
}

// Generate media queries for layout width placeholder
@mixin body-layout($minwidth, $margin-value, $body-value) {
	@media only screen and (min-width: $minwidth) {
		width: $body-value;
		margin-left: $margin-value;
		margin-right: $margin-value;
	}
}

// because adding visibility to pseudo selectors is too much text

@mixin pseudoborders() {
	content: "";
	display: block;
	height: 1px;
	width: 100%;
	position: absolute;
	left: 0;
	right: 0;
}

// move out of bounds by svg width, add offset value to adjust how far inside the margin it should be
// top value is based on percentage of the width of the svg
// lock both values when max container width is reached.
@mixin svg-pos($x-pos, $offset: 12.3%, $media: true) {
	top: unquote("calc((var(--svgsize) * 0.336283185841) * -1)");
	#{$x-pos}: unquote("calc((var(--svgsize) * -1) + #{$offset})");
	@if $media == true {
		@media only screen and (min-width: 1440px) {
			top: -152px;
			#{$x-pos}: -324px;
		}
	}
}
// Collective styling for dropdown menu button and offcanvas button
@mixin verticalButtonMenu($sidepadding) {
	color: $on-surface !important;
	background-color: $surface-variant;
	background-image: $card-gradient;
	padding: 30px $sidepadding !important;
	width: 100%;
	display: flex;
	justify-content: space-between;
	&:not(.active):hover {
		color: $primary-hover !important;
	}
	.far,
	.fal,
	.fas,
	.svg-inline--fa {
		display: inline-block;
		margin-right: 10px;
	}
	&:hover,
	&:focus {
		box-shadow: $card-inset;
	}
	&.active {
		background-color: transparent;
		background-image: none;
		box-shadow: none;
		color: $primary !important;
	}
}
